<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<!-- 继承 spring boot -->
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
	</parent>

	<groupId>com.mauersu</groupId>
	<artifactId>redis-admin</artifactId>
	<version>1.0</version>
	<!-- 打成基于SpringBoot的war 也可以执行运行
		java -jar xx.war
	 -->
	<packaging>war</packaging>
	<name>redis-admin</name>
	<description>redis admin</description>
	
	<scm>
		<developerConnection>scm:git:ssh://git@github.com/mauersu/redis-admin.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<common.version>0.0.1</common.version>
		<javax.servlet.version>3.1.0</javax.servlet.version>
		<jetbrick-template.version>2.1.10</jetbrick-template.version>
		<mybatis-spring.version>2.0.0</mybatis-spring.version>
		<druid.version>1.1.14</druid.version>
		<guava.version>27.0.1-jre</guava.version>
		<jedis.version>2.9.2</jedis.version>
		<fastjson.version>1.2.56</fastjson.version>
		<mybatis.spring.boot.version>2.0.0</mybatis.spring.boot.version>	
 		<mybatis-generator.version>1.3.7</mybatis-generator.version>   
		<tk.mapper.version>4.1.5</tk.mapper.version> 		 		
	</properties>

	<build>
		<plugins>
			<!-- 编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<compilerVersion>${java.version}</compilerVersion>
					<!-- 编译的类文件是否包含调试信息 -->
					<debug>true</debug>
					<!-- 是否展示详细的设置信息 -->
					<detail>true</detail>
					<!-- 指定编译文件的编码 -->
					<encoding>${project.build.sourceEncoding}</encoding>
					<!-- 编译失败是否停止 -->
					<failOnError>true</failOnError>
					<!-- 是否强制jdk版本 -->
					<forceJavacCompilerUse>true</forceJavacCompilerUse>
					<!-- 是否分开执行编译，设置为true会导致部分输出中文乱码 -->
					<fork>false</fork>
					<!-- 输出源码文件名 -->
					<outputFileName>a.jar</outputFileName>
					<!-- 源码位置是否显示过期api被使用 -->
					<showDeprecation>true</showDeprecation>
					<!-- 是否输出编译警告 -->
					<showWarnings>false</showWarnings>
					<!-- 忽略测试 -->
					<skip>true</skip>
					<!-- 是否忽略main源码 -->
					<skipMain>false</skipMain>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<source>${java.version}</source>
					<!-- main编译器版本 source 和 target 要保持一致 -->
					<target>${java.version}</target>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testSource>${java.version}</testSource>
					<!-- 测试编译器版本 source 和 target 要保持一致 -->
					<testTarget>${java.version}</testTarget>
					<!-- 输出编译器详细运行信息 -->
					<verbose>false</verbose>
				</configuration>
			</plugin>		
		
			<!-- 打包插件，打包当前项目相关文件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- 解决 控制台输出测试信息 - 乱码 -->
					<argLine>-Dfile.encoding=${project.build.sourceEncoding}</argLine>
					<reuseForks>true</reuseForks>
					<!-- 打包时跳过单元测试 -->
					<skip>true</skip>
					<skipTests>true</skipTests>
					<!-- 忽略测试失败 -->
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>		
		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
		<finalName>redis-admin</finalName>
	</build>

	<dependencies>

		<!-- fastjson -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>fastjson</artifactId>
			<version>${fastjson.version}</version>
		</dependency>
		
		<!-- JSTL API -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>	
		
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>1.1.2</version>
		</dependency>
		
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
	
		<!-- Jetbrick Template Engineer -->
		<dependency>
			<groupId>com.github.subchen</groupId>
			<artifactId>jetbrick-template-springmvc</artifactId>
			<version>${jetbrick-template.version}</version>
		</dependency>
	
		<!-- redis -->
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
		</dependency>

		<!-- spring boot starter web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
			<exclusions>
				<!-- 把一些多余的日志依赖去除，解决日志冲突问题 -->	
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>										
			</exclusions>			
		</dependency>
		
		<!-- 指定日志 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>

		<!-- reids -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
		</dependency>

		<!-- 测试 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<optional>true</optional>
			<scope>test</scope>
		</dependency>
	
		<!-- 支持JSP的路径访问 -->
		<dependency>
		    <groupId>org.apache.tomcat.embed</groupId>
		    <artifactId>tomcat-embed-jasper</artifactId>
		  <!--   <scope>provided</scope> -->
		</dependency>

		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid.version}</version>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>	

		<dependency>
			<groupId>com.hua</groupId>
			<artifactId>common</artifactId>
			<version>${common.version}</version>
			<exclusions>
				<!-- 排除依赖，去掉错误干扰 -->
				<exclusion>
				 <groupId>com.mchange</groupId>
				 <artifactId>c3p0</artifactId> 
        		</exclusion>
			</exclusions>
		</dependency>

	</dependencies>

</project>
